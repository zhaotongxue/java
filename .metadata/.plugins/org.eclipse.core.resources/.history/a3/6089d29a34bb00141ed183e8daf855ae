package files;

import java.io.IOException;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class HavaXMLTry {

	public static void main(String[] args) throws ParserConfigurationException, SAXException, IOException {
		// TODO Auto-generated method stub
		DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
		DocumentBuilder db;
		db = dbf.newDocumentBuilder();
		Document d=db.parse("src/contact.xml");
		Element e=(Element) d.getElementsByTagName("Contact");
		//NodeList n=e.getElementsByTagName("Name");
		NodeList n=e.getChildNodes();
		ArrayList<String> al=new ArrayList<String>();
		//遍历所有Contact
		for(int i=0;i<n.getLength();i++){
			//获得每个Contact下的Name
			NodeList nameList=e.getElementsByTagName("Name");
			//如果Name读父节点是Contact，就添加
			for(int j=0;j<nameList.getLength();j++){
				if(nameList.item(j).getParentNode().getNodeName()=="Contact"){
					al.add(nameList.item(j).getTextContent());
				}
			}
			
//				if(n.item(i).getParentNode().getNodeName()=="Contact"){
//					al.add(n.item(i).getTextContent());
//					}
				int num=1;
				while(n.item(num).getNodeName()!="PhoneList"){
					num++;
				}
				NodeList phoneNL=n.item(num).getChildNodes();
				for(int j=1;j<phoneNL.getLength();j++){
					al.add(phoneNL.item(j).getTextContent());
				}
			}
		for(String s:al){
			System.out.println(s);
		}
	}
}
